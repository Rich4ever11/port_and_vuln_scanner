using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.DataFormats;

struct CapecStruct
{
    public string id;
    public string name;
    public string prerequisites;
    public string solutions;
    public string summary;
}

struct CPEStruct
{
    public string vendor;
    public string product;
    public string version;
}

namespace PortScanner
{
    public partial class VulnerabilityLookUp : Form
    {
        IDictionary<string, List<CapecStruct>> CVECapec = new Dictionary<string, List<CapecStruct>>();
        IDictionary<string, List<CPEStruct>> CVECPE = new Dictionary<string, List<CPEStruct>>();
        public VulnerabilityLookUp()
        {
            InitializeComponent();
        }

        private void loadVulnerabilityData()
        {
            foreach (string CVE in portScanner.vulnerabilityList)
            {
                dynamic CVEAPICallResult = portScanner.createAPICall("http://cve.circl.lu/api/cve/", CVE);
                string authenticationEffect = CVEAPICallResult?["access"]?["authentication"]?.ToString() ?? "Not Found";
                string attackComplexity = CVEAPICallResult?["access"]?["complexity"]?.ToString() ?? "Not Found";
                string attackVector = CVEAPICallResult?["access"]?["vector"]?.ToString() ?? "Not Found";
                string cvssRating = CVEAPICallResult?["cvss"]?.ToString() ?? "Not Found";
                string availabilityStatus = CVEAPICallResult?["impact"]?["availability"]?.ToString() ?? "Not Found";
                string confidentialityStatus = CVEAPICallResult?["impact"]?["confidentiality"]?.ToString() ?? "Not Found";
                string integrityStatus = CVEAPICallResult?["impact"]?["integrity"]?.ToString() ?? "Not Found";
                string impact = CVEAPICallResult?["msbulletin"]?[0]?["impact"]?.ToString() ?? "Not Found";
                string shortDescription = CVEAPICallResult?["msbulletin"]?[0]?["title"]?.ToString() ?? "Not Found";
                string severity = CVEAPICallResult?["msbulletin"]?[0]?["severity"]?.ToString() ?? "Not Found";
                string summary = CVEAPICallResult?["summary"]?.ToString() ?? "Not Found";
                string published = CVEAPICallResult?["Published"]?.ToString() ?? "Not Found";
                string modified = CVEAPICallResult?["Modified"]?.ToString() ?? "Not Found";
                List<CapecStruct> CapecList = new List<CapecStruct>();
                for (int i = 0; i < CVEAPICallResult?["capec"].Count; i++)
                {
                    CapecStruct newCapecStruct = new CapecStruct();
                    newCapecStruct.id = CVEAPICallResult?["capec"]?[i]?["id"];
                    newCapecStruct.name = CVEAPICallResult?["capec"]?[i]?["name"];
                    newCapecStruct.prerequisites = CVEAPICallResult?["capec"]?[i]?["prerequisites"];
                    newCapecStruct.solutions = CVEAPICallResult?["capec"]?[i]?["solutions"];
                    newCapecStruct.summary = CVEAPICallResult?["capec"]?[i]?["summary"];
                    CapecList.Add(newCapecStruct);

                }
                List<CPEStruct> CPEList = new List<CPEStruct>();
                for (int i = 0; i < CVEAPICallResult?["vulnerable_product"].Count; i++)
                {
                    CPEStruct newCPEStruct = new CPEStruct();
                    string fullProduct = CVEAPICallResult?["vulnerable_product"][i];
                    string[] fullProductStringList = fullProduct.Split(':');
                    newCPEStruct.vendor = fullProductStringList[3];
                    newCPEStruct.product = fullProductStringList[4];
                    newCPEStruct.version = fullProductStringList[5];
                    CPEList.Add(newCPEStruct);
                }
                CVECapec[CVE] = CapecList;
                CVECPE[CVE] = CPEList;
                dataGridView1.Rows.Add(CVE, shortDescription, cvssRating, severity, impact, availabilityStatus, confidentialityStatus, integrityStatus,
                    authenticationEffect, attackComplexity, attackVector, summary, published, modified);
            }
        }

        private void VulnerabilityLookUp_Load(object sender, EventArgs e)
        {
            loadVulnerabilityData();
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            richTextBox2.Text = "";
            dataGridView3.Rows.Clear();
            dataGridView2.Rows.Clear();
            DataGridView dgv = new DataGridView();
            dgv = dataGridView1;
            string targetCellName = dgv.CurrentRow.Cells[0].Value.ToString();
            foreach (CapecStruct Capec in CVECapec[targetCellName])
            {
                string[] row = new string[] { Capec.id, Capec.name, Capec.prerequisites, Capec.solutions, Capec.summary };
                dataGridView3.Rows.Add(row);
            }

            foreach (CPEStruct CPE in CVECPE[targetCellName])
            {
                string[] row = new string[] { CPE.vendor, CPE.product, CPE.version };
                dataGridView2.Rows.Add(row);
            }
            richTextBox2.Text += targetCellName + " Description - " + dgv.CurrentRow.Cells[11].Value.ToString();
        }

        private void dataGridView3_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            richTextBox2.Text = "";
            DataGridView dgv = new DataGridView();
            dgv = dataGridView3;
            string CapecId = dgv.CurrentRow.Cells[0].Value.ToString();
            string CapecPrerequisites = dgv.CurrentRow.Cells[2].Value.ToString();
            string CapecSolution = dgv.CurrentRow.Cells[3].Value.ToString();
            string CapecSummary = dgv.CurrentRow.Cells[4].Value.ToString();

            richTextBox2.Text = "Capec Num. " + CapecId + " Summary - " + CapecSummary + "\n\n";
            richTextBox2.Text += "CapecId Num. " + CapecId + " Prerequisites - " + CapecPrerequisites + "\n\n";
            richTextBox2.Text += "CapecId Num. " + CapecId + " Solution - " + CapecSolution;
        }
    }
}
